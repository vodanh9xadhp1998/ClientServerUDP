package TransportFile;

import java.net.*;
import java.io.*;
import java.util.*;
import java.util.logging.Logger;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JTextField;
import java.awt.Font;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class Server {

	private JFrame frame;
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Server window = new Server();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Server() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 450, 300);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		JLabel lblNewLabel = new JLabel("Port :");
		lblNewLabel.setFont(new Font("Times New Roman", Font.PLAIN, 16));
		lblNewLabel.setBounds(87, 25, 46, 26);
		frame.getContentPane().add(lblNewLabel);
		
		JTextArea textArea = new JTextArea();
		textArea.setFont(new Font("Times New Roman", Font.PLAIN, 16));
		textArea.setBounds(10, 60, 414, 190);
		frame.getContentPane().add(textArea);
		
		JButton btnStart = new JButton("Start");
		btnStart.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				 ServerSocket serverSocket = null;
			        try {
			            System.out.println("Binding to port " + 9999 + ", please wait  ...");
			            serverSocket = new ServerSocket(9999);
			            System.out.println("Server started: " + serverSocket);
			            System.out.println("Waiting for a client ...");
			            while (true) {
			                try {
			                    Socket socket = serverSocket.accept();
			                    System.out.println("Client accepted: " + socket);
			 
			                    OutputStream os = socket.getOutputStream();
			                    InputStream is = socket.getInputStream();
			                    int ch = 0;
			                    while (true) {
			                        ch = is.read(); // Receive data from client
			                        if (ch == -1) {
			                            break;
			                        }
			                        os.write(ch); // Send the results to client
			                    }
			                    socket.close();
			                } catch (IOException e1) {
			                    System.err.println(" Connection Error: " + e1);
			                }
			            }
			        } catch (IOException e1) {
			            e1.printStackTrace();
			        } finally {
			            if (serverSocket != null) {
			                try {
								serverSocket.close();
							} catch (IOException e1) {
								// TODO Auto-generated catch block
								e1.printStackTrace();
							}
			            }
			        }
			    }
		});
		btnStart.setFont(new Font("Times New Roman", Font.PLAIN, 16));
		btnStart.setBounds(228, 23, 89, 30);
		frame.getContentPane().add(btnStart);
		
		JLabel lblNewLabel_1 = new JLabel("9999");
		lblNewLabel_1.setFont(new Font("Times New Roman", Font.PLAIN, 16));
		lblNewLabel_1.setBounds(125, 28, 65, 20);
		frame.getContentPane().add(lblNewLabel_1);
	}
}
